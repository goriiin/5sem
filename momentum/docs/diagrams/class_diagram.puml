
@startuml
class Tag {
    + tag_name: CharField
    + used_times: PositiveIntegerField
    + __str__(): str
    + objects: TagManager
}

class Profile {
    + updated_time: DateTimeField
    + avatar_path: ImageField
    + answers_count: PositiveIntegerField
    + user: OneToOneField(User)
    + recalculate_answers_count(): None
    + __str__(): str
    + __int__(): int
    + objects: ProfileManager
}

class Post {
    + content: TextField
    + author: ForeignKey(Profile)
    + created_time: DateTimeField
    + likes_count: IntegerField
    + answers_count: IntegerField
    + tags: ManyToManyField(Tag)
    + access_mode: CharField
    + save(*args, **kwargs): None
    + recalculate_likes(): None
    + recalculate_answers_count(): None
    + __int__(): int
    + objects: PostManager
}

class PostLike {
    + user_id: ForeignKey(Profile)
    + question_id: ForeignKey(Post)
    + vote: IntegerField
    + objects: PostLikeManager
}

class Answer {
    + answer: TextField
    + created_time: DateTimeField
    + author: ForeignKey(Profile)
    + likes_count: IntegerField
    + question: ForeignKey(Post)
    + save(*args, **kwargs): None
    + recalculate_likes(): None
    + __str__(): str
    + __int__(): int
    + objects: AnswerManager
}

class AnswerLike {
    + answer: ForeignKey(Answer)
    + vote: IntegerField
    + user_id: ForeignKey(Profile)
    + objects: AnswerLikeManager
}

class PostFile {
    + post: ForeignKey(Post)
    + file: FileField
    + __str__(): str
}

class Subscription {
    + follower: ForeignKey(Profile)
    + followed: ForeignKey(Profile)
    + created_at: DateTimeField
}

User --> Profile : "1 : 1"
Profile --> Subscription : "1 *"
Profile --> Post : "1 *"
Post --> PostFile : "1 *"
Post --> PostLike : "1 *"
Post --> Answer : "1 *"
Answer --> AnswerLike : "1 *"
Profile --> Answer : "1 *"
Profile --> PostLike : "1 *"
Profile --> AnswerLike : "1 *"
Post --> Tag : "ManyToMany"
@enduml
